// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package kurs

import (
	"github.com/google/wire"
	"gocrawler-web-sample/app"
	"gocrawler-web-sample/infrastructure/configuration"
)

// Injectors from wire.go:

func InjectRoutes() (*Routes, error) {
	appEnvironment, err := app.ProvideAppEnvironment()
	if err != nil {
		return nil, err
	}
	environmentConfigBinderProperties := _wireEnvironmentConfigBinderPropertiesValue
	appConfig := app.ProvideAppConfig(environmentConfigBinderProperties)
	configurationAppConfig := app.ProvideAppEnvConfig(appConfig)
	repository := NewRepository(configurationAppConfig)
	service := NewService(appEnvironment, repository)
	httpDelivery := NewDelivery(service)
	routes := NewRoutes(httpDelivery)
	return routes, nil
}

var (
	_wireEnvironmentConfigBinderPropertiesValue = configuration.EnvironmentConfigBinderProperties{
		FileName: "app-config",
		Path:     "./env",
	}
)

// wire.go:

var (
	ModuleSets = wire.NewSet(
		NewRepository,
		NewService, wire.Bind(new(IKursRepository), new(*Repository)), wire.Bind(new(IKursService), new(*Service)), NewDelivery,
		NewRoutes)
)
